import java.util.ArrayList;

public class CourseManager {
    private ArrayList<Course> courses;
    private ArrayList<Student> students;
    private boolean ifOpen;
    private ArrayList<Student> successStudents;

    public CourseManager() {
        courses = new ArrayList<>();
        students = new ArrayList<>();
        ifOpen = true;
        successStudents = new ArrayList<>();
    }

    public ArrayList<Student> getStudents() {
        return students;
    }

    public ArrayList<Course> getCourses() {
        return courses;
    }

    public void setIfOpen(Boolean ifOpen) {
        this.ifOpen = ifOpen;
    }

    public boolean getIfOpen() {
        return ifOpen;
    }

    public void addCourse(Course course) {
        courses.add(course);
        course.setCourseManager(this);
    }

    public void addStudent(Student student) {
        students.add(student);
        student.setCourseManager(this);
    }

    public boolean enrollStudentInCourse(Student student, String courseId, int credits) {
        // Method implementation
    }

    public boolean modifyStudentEnrollmentCredits(Student student, String courseId, int credits) {
        // Method implementation
    }

    public boolean dropStudentEnrollmentCourse(Student student, String courseId) {
        // Method implementation
    }

    public ArrayList<String> getEnrolledCoursesWithCredits(Student student) {
        // Method implementation
    }

    private Course findCourse(String courseId) {
        // Method implementation
    }

    private boolean handleCourseOverCapacity(Course course) {
        // Method implementation
    }

    public boolean isStudentEnrolledInCourse(Student student, String courseId) {
        // Method implementation
    }

    public boolean addEnrollmentToStudent(Student student, String courseId, int credits) {
        // Method implementation
    }

    public boolean addEnrollmentToCourse(Course course, Student student, int credits) {
        // Method implementation
    }

    public boolean modifyEnrollmentCreditsForStudent(Student student, String courseId, int credits) {
        // Method implementation
    }
}
